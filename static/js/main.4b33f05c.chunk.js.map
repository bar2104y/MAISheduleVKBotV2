{"version":3,"sources":["App.js","index.js"],"names":["Example","props","closePopout","bind","SendMessage","bridge","send","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","console","log","setState","user","state","activeView","popout","groupNumber","notification","messageToAdmin","text","e","this","actions","title","autoclose","mode","action","onClose","activePanel","id","before","photo_200","src","description","city","first_name","last_name","onClick","go","openAlert","left","top","placeholder","onChange","target","size","name","checked","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4b33f05c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport { Root, View, Panel, PanelHeader,PanelHeaderBack,PanelHeaderClose} from '@vkontakte/vkui';\nimport { Group,Div,Button,Cell,CellButton,Avatar} from '@vkontakte/vkui';\nimport { FormLayout, Textarea, Radio,Input} from '@vkontakte/vkui';\nimport { Alert } from '@vkontakte/vkui';\n\nclass Example extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.closePopout = this.closePopout.bind(this);\n\t\tthis.SendMessage = this.SendMessage.bind(this);\n\n\t\tbridge.send(\"VKWebAppInit\", {});\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t} else if(type==='VKWebAppGetUserInfoResult'){\n\t\t\t\tconsole.log('Get usr data');\n\t\t\t\tthis.setState({user:data})\n\t\t\t} else {\n\t\t\t\tconsole.log(type,data)\n\t\t\t}\n\t\t});\n\n\t\tbridge.send(\"VKWebAppGetUserInfo\", {});\n\n\t\tthis.state = {\n\t\t\tactiveView: 'Home',\n\t\t\tpopout: null,\n\t\t\tuser: {},\n\n\t\t\tgroupNumber: 'М7О-228-12',\n\t\t\tnotification : '0',\n\t\t\t\n\t\t\tmessageToAdmin: '',\n\n\t\t}\t \n\t}\n\n\tSendMessage(text){\n\t\tconsole.log(text);\n\t}\n\n\tgo (e) {this.setState({ activeView:e})};\n\n\topenAlert(type){\n\t\tif (type === 'SendMessage'){\n\t\t\tthis.setState({ popout:\n\t\t\t\t<Alert\n\t\t\t\t  actions={[{\n\t\t\t\t\ttitle: 'Отмена',\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\tmode: 'cancel'\n\t\t\t\t  }, {\n\t\t\t\t\ttitle: 'Отправить',\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tlet text = 'Сообщение одмену';\n\t\t\t\t\t\tthis.SendMessage(text);\n\t\t\t\t\t},\n\t\t\t\t  }]}\n\t\t\t\t  onClose={this.closePopout}\n\t\t\t\t>\n\t\t\t\t  <h2>Сообщение админу</h2>\n\t\t\t\t  <p>Отправить сообщение админимстратору:</p>\n\t\t\t\t  <Div>{this.state.messageToAdmin}</Div>\n\t\t\t\t</Alert>\n\t\t\t  });\n\t\t} else if(type==='DelAllAboutUser'){\n\t\t\tthis.setState({ popout:\n\t\t\t\t<Alert\n\t\t\t\t  actions={[{\n\t\t\t\t\ttitle: 'Отмена',\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\tmode: 'cancel'\n\t\t\t\t  }, {\n\t\t\t\t\ttitle: 'Удалить',\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\tmode: 'destructive',\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tlet text = 'Удаление всех данных о пользователе';\n\t\t\t\t\t\tthis.SendMessage(text);\n\t\t\t\t\t},\n\t\t\t\t  }]}\n\t\t\t\t  onClose={this.closePopout}\n\t\t\t\t>\n\t\t\t\t  <h2>Удаление данных</h2>\n\t\t\t\t  <p>Вы уверены, что хотите удалить все данные? Сообщения приходить не будут</p>\n\t\t\t\t</Alert>\n\t\t\t  });\n\t\t} else if (type === 'SaveSettings'){\n\t\t\tthis.setState({ popout:\n\t\t\t\t<Alert\n\t\t\t\t  actions={[{\n\t\t\t\t\ttitle: 'Отмена',\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\tmode: 'cancel'\n\t\t\t\t  }, {\n\t\t\t\t\ttitle: 'Сохранить',\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\tmode: 'default',\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tlet text = 'Настройки сохранены';\n\t\t\t\t\t\tthis.SendMessage(text);\n\t\t\t\t\t},\n\t\t\t\t  }]}\n\t\t\t\t  onClose={this.closePopout}\n\t\t\t\t>\n\t\t\t\t  <h2>Сохранить настройки?</h2>\n\t\t\t\t</Alert>\n\t\t\t  });\n\t\t}\n\t}\n\n\tclosePopout () {\n\t\tthis.setState({ popout: null });\n\t  }\n\n\n\trender() {\n      return (\n        <Root activeView={this.state.activeView}>\n        \t<View popout={this.state.popout} activePanel=\"Home\" id=\"Home\">\n\t\t\t\t<Panel id=\"Home\">\n\t\t\t\t\t<PanelHeader>Расписание МАИ</PanelHeader>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={this.state.user.photo_200 ? <Avatar src={this.state.user.photo_200}/> : null}\n\t\t\t\t\t\t\tdescription={this.state.user.city && this.state.user.city.title ? this.state.user.city.title : ''}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tДратути, {`${this.state.user.first_name} ${this.state.user.last_name}`}\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t</Group>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<CellButton onClick={()=>this.go('EditSettings')}>Редактировать настроечки</CellButton>\n\t\t\t\t\t\t<CellButton onClick={()=>this.go('Message')} >Отправить сообщение одмену</CellButton>\n\t\t\t\t\t</Group>\n\t\t\t\t\t<Group><CellButton mode=\"danger\" onClick={()=>this.openAlert('DelAllAboutUser')}>Удалить все про меня</CellButton></Group>\n\t\t\t\t\t\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t\t<View popout={this.state.popout} activePanel=\"Message\" id=\"Message\">\n\t\t\t\t<Panel id=\"Message\">\n\t  \t\t\t\t<PanelHeader left={<PanelHeaderBack onClick={()=>this.go('Home')}></PanelHeaderBack>} >Сообщение одмену</PanelHeader>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\ttop=\"Сообщение\"\n\t\t\t\t\t\t\t\tvalue={this.state.messageToAdmin}\n\t\t\t\t\t\t\t\tplaceholder=\"Одмен, все плохо, удались из интернета\"\n\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ messageToAdmin: e.target.value})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button size=\"xl\" mode=\"commerce\" onClick={()=> this.openAlert('SendMessage')}>Отправить</Button>\n\t\t\t\t\t\t</FormLayout>\n\t\t\t\t\t\t\n\t\t\t\t\t</Group>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\n\t\t\t<View popout={this.state.popout} activePanel=\"EditSettings\" id=\"EditSettings\">\n\t\t\t\t<Panel id=\"EditSettings\">\n\t  \t\t\t\t<PanelHeader left={<PanelHeaderBack onClick={()=>this.go('Home')}></PanelHeaderBack>} >Персональные настройки</PanelHeader>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\ttop=\"Номер группы\"\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvalue={this.state.groupNumber}\n\t\t\t\t\t\t\t\tonChange={(e)=>this.setState({groupNumber:e.target.value})}\t\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Group top=\"Уведомления\">\n\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\tname=\"notification\"\n\t\t\t\t\t\t\t\t\tvalue=\"1\"\n\t\t\t\t\t\t\t\t\tonChange={(e)=>this.setState({notification: e.target.value})}\n\t\t\t\t\t\t\t\t\tchecked={ this.state.notification === '1'}\n\t\t\t\t\t\t\t\t>Включить</Radio>\n\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\tname=\"notification\"\n\t\t\t\t\t\t\t\t\tvalue=\"0\"\n\t\t\t\t\t\t\t\t\tonChange={(e)=>this.setState({notification: e.target.value})}\n\t\t\t\t\t\t\t\t\tchecked={ this.state.notification === '0'}\n\t\t\t\t\t\t\t\t>Выключить</Radio>\n\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t<Button size=\"xl\" mode=\"commerce\" onClick={()=> this.openAlert('SaveSettings')}>Сохранить</Button>\n\t\t\t\t\t\t</FormLayout>\n\t\t\t\t\t\t\n\t\t\t\t\t</Group>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\n\t\t</Root>\n      )\n    }\n  }\n  \n\nexport default Example;\n\n/*const App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [this.state.user, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' this.state.user={this.state.user} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;*/\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport Example from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<Example />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}